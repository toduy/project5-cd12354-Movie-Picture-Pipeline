name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_REPOSITORY: mp-frontend

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup nodejs
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install node modules
        run: npm ci
        working-directory: starter/frontend

      - name: Run eslint
        run: npm run lint
        working-directory: starter/frontend

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup nodejs
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      - name: Install node modules
        run: npm ci
        working-directory: starter/frontend

      - name: Run tests
        run: npm test
        working-directory: starter/frontend

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Build frontend docker
        run: docker build ./starter/frontend --build-arg REACT_APP_MOVIE_API_URL=${{ vars.REACT_APP_MOVIE_API_URL }} -t ${{ env.IMAGE_REPOSITORY }}:${{ github.sha }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push to Amazon ECR
        run: |
          docker tag ${{ env.IMAGE_REPOSITORY }}:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPOSITORY }}:${{ github.sha }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPOSITORY }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Update-kubeconfig
        run: aws eks update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
      - name: Deploy to EKS
        run: |
          kustomize edit set image frontend=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.IMAGE_REPOSITORY }}:${{ github.sha }}
          kustomize build | kubectl apply -f -
        working-directory: starter/frontend/k8s